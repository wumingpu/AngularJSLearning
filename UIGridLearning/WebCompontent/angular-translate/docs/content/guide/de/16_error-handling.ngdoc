@ngdoc overview
@name Error Handling
@description

# Error Handling

Es kann vorkommen, dass eine App so komplex wird, dass man gar nicht mehr genau
weiß, was für Translation ID's man hat. Man ist sich möglicherweise nich tmal sicher,
ob es überhaupt eine Übersetzung für bestimmte Translation ID's gibt. Da kommt
der missingTranslationHandler ins Spiel.


## Die Log-Handler-Extension für fehlende Übersetzungen nutzen

Es gibt eine Extension für angular-translate, die Warnings in der Konsole loggt,
wenn versucht wird eine Translation ID zu übersetzen, für die es keine Übersetzung
gibt. Wie alle Extensions lässt sich auch diese mit Bower installieren:

```
$ bower install angular-translate-handler-log
```

Um den Handler zu verwenden muss man nichts weiter machen als die
`useMissingTranslationHandler()`- Methode auf dem `$translateProvider` aufzurufen.
angular-translate kümmert sich um den Rest.

<pre>
$translateProvider.useMissingTranslationHandlerLog();
</pre>

Hier ein Beispiel:

<doc:example module="myApp">
  <doc:source>
    <script>
      var app = angular.module('myApp', ['pascalprecht.translate']);

      app.config(['$translateProvider', function ($translateProvider) {
        $translateProvider.preferredLanguage('en');
        $translateProvider.useMissingTranslationHandlerLog();
        $translateProvider.translations('en', {
          HEADLINE: 'I\'m a headline',
          TEXT: 'I\'m using default interpolation {{ val + val }}',
          PLURAL: '{GENDER, select, male{He} female{She} other{They}} liked this.',
          BUTTON_LANG_EN: 'English',
          BUTTON_LANG_DE: 'German'
        });

        $translateProvider.translations('de', {
          HEADLINE: 'Ich bin eine Überschrift',
          TEXT: 'Ich benutze default interpolation {{ val + val }}',
          PLURAL: '{GENDER, select, male{Er fand} female{Sie fand} other{Sie fanden}} es gut.',
          BUTTON_LANG_EN: 'Englisch',
          BUTTON_LANG_DE: 'Deutsch'
        });
      }]);

      app.controller('Ctrl', ['$translate', '$scope', function ($translate, $scope) {

        $scope.changeLanguage = function (langKey) {
          $translate.use(langKey);
        };
      }]);
    </script>
    <div ng-controller="Ctrl">
      <p translate="NOT_EXISTING"></p>
      <p translate="ALSO_NOT_EXISTING"></p>

      <button ng-click="changeLanguage('de')" translate="BUTTON_LANG_DE"></button>
      <button ng-click="changeLanguage('en')" translate="BUTTON_LANG_EN"></button>
    </div>
  </doc:source>
</doc:example>

Schau in der Konsole des Browsers nach!

## Nutzung der "Post processing" Funktion

Seit Version 2.11 ist es möglich, auch eine "post processing" (wird nach Übersetzung aufgerufen) Funktion zu nutzen.
Dieses gibt dir die Möglichkeit, zusätzliche Debug-Informationen für Übersetzer zu erhalten oder einfach nur
eine einfache Identifikation von Schlüssel -> Inhalten zu ermöglichen, damit auch falsche Übersetzungen schnell
gefunden werden.

Um diese Funktionalität zu nutzen, muss sie über die Modulkonfiguration aktiviert werden:

<pre>
 $translateProvider.postProcess(function (translationId, translation, interpolatedTranslation, params, lang) {
    return '<span style="color: #cccccc">' + translationId + '(' + lang + '):</span> ' +
      (interpolatedTranslation ? interpolatedTranslation : translation);
  });
</pre>

Die Funktion stellt fünf Parameter bereit:

- translationId (Übersetzungsschlüssel)
- translation (Übersetzungswert)
- interpolatedTranslation (interpolierte Übersetzung)
- params (Parameter-Werte)
- lang (Sprachschlüssel, der zum Erfolg geführt hat)


<br>
<hr>
<center>Made with unicorn &hearts; love by the angular-translate team (http://github.com/angular-translate)</center>
